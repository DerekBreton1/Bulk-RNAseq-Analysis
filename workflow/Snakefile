#files = ['SRR12007825', 'SRR12007837', 'SRR12007843', 'SRR12007847', 'SRR12007849', 'SRR12007851', 'SRR12007855', 'SRR12007861', 'SRR12007869']
files = ['Healthy_15', 'Healthy_72', 'Healthy_75', 'Severe_77', 'Severe_78', 'Severe_90', 'ICU_79', 'ICU_81', 'ICU_84']
readpairs = ['R1', 'R2']

rule all:
    input:
        'results/multiqc_report.html',
        'results/abundance.h5',
        'results/abundance.tsv',
        'results/run_info.json'


# Initial quality control
rule fastqc:
    input:
        fastq = 'data/{name}.fastq.gz'
    output:
        fastqc = 'results/{name}_fastqc.html'
    params:
        outdir = 'results/'
    conda:
        'envs/fastqc_env.yaml'
    shell:
        '''
        fastqc {input.fastq} -o {params.outdir}
        '''

# Aggregate the fastqc files
rule multiqc:
    input:
        expand('results/{name}_fastqc.html', name = files)
    output:
        report = 'results/multiqc_report.html'
    params:
        outdir = 'results/'
    conda:
        'envs/multiqc_env.yaml'
    shell:
        '''
        multiqc {params.outdir} -o {params.outdir}
        '''

# Download and merge cDNA and ncDNA
rule download_merge_DNA:
    output:
        transcriptome = 'results/Homo_sapiens.GRCh38.rna.fa.gz'
    params:
        cDNA = 'ftp://ftp.ensembl.org/pub/current_fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz',
        ncDNA = 'ftp://ftp.ensembl.org/pub/current_fasta/homo_sapiens/ncrna/Homo_sapiens.GRCh38.ncrna.fa.gz'
    shell:
        '''
        wget -P results/ {params.cDNA}
        wget -P results/ {params.ncDNA}
        cat results/Homo_sapiens.GRCh38.cdna.all.fa.gz results/Homo_sapiens.GRCh38.ncrna.fa.gz > {output.transcriptome}
        '''

# Build a Kallisto index
rule build_kallisto_index:
    input:
        transcriptome = 'results/Homo_sapiens.GRCh38.rna.fa.gz'
    output:
        index = 'results/hsGRCh38_kallisto.idx'
    conda:
        'envs/kallisto_env.yaml'
    shell:
        '''
        kallisto index -i {output.index} {input.transcriptome}
        '''

# Quantify abundances of transcripts
rule quant:
    input:
        index = 'results/hsGRCh38_kallisto.idx',
        fastq = expand('results/{name}.fastq.gz', name=files)
    output:
        'results/abundance.h5',
        'results/abundance.tsv',
        'results/run_info.json'
    params:
        outdir = 'results/'
    threads: 2
    conda:
        'envs/kallisto_env.yaml'
    shell:
        '''
        kallisto quant -i {input.index} -o {params.outdir} -t {threads} {input.index}
        '''